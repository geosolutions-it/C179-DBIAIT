x-common:
  &common
  build:
    context: ./
    dockerfile: Dockerfile
  restart: unless-stopped
  env_file:
    - .env
  volumes:
    - .:/usr/src/dbiait/
  depends_on:
    db:
      condition: service_healthy

services:
  dbiait:
    << : *common
    container_name: dbiait
    command: ["source /opt/conda/etc/profile.d/conda.sh && conda activate dbiait && gunicorn -c /usr/src/dbiait/deploy/gunicorn.conf.py"]
    entrypoint: ["/usr/src/dbiait/deploy/entrypoint.sh"]
    ports:
      - "8001:8000"
    env_file:
      - .env
    healthcheck:
      test: "curl -m 10 --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://localhost:8000/qas/auth/"
      start_period: 20s
      interval: 20s
      timeout: 5s
      retries: 2

  dramatiq:
    << : *common
    container_name: dramatiq
    command: ["bash", "-c", "source /opt/conda/etc/profile.d/conda.sh && conda activate dbiait && python /usr/src/dbiait/manage.py global_interpreter_rundramatiq"]

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  db:
    container_name: postgres
    image: postgis/postgis:15-3.4-alpine
    env_file:
      - .env
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -d postgres -U postgres"
    ports:
      - "5434:5432"
  
volumes:
  dbiait:
    name: dbiait-project
  dbdata:
    name: dbiait-dbdata